From: =?utf-8?q?Jonas_=C3=85dahl?= <jadahl@gmail.com>
Date: Thu, 13 Aug 2020 13:28:29 +0200
Subject: screencast: Drop all-or-nothing API version checks (#323)

Lets for now assume APIs are backward compatible. If they ever end up
needing special casing, lets deal with it then.

Do the same for the remote desktop API.

Origin: upstream, 1.7.2, commit:09292b9e2805df982b90c262b93f2e7f3d192a8d
---
 src/gnomescreencast.c |  8 --------
 src/remotedesktop.c   | 11 -----------
 src/screencast.c      | 15 ---------------
 3 files changed, 34 deletions(-)

diff --git a/src/gnomescreencast.c b/src/gnomescreencast.c
index 79dc876..fd80ca7 100644
--- a/src/gnomescreencast.c
+++ b/src/gnomescreencast.c
@@ -22,8 +22,6 @@
 
 #include <stdint.h>
 
-#define SUPPORTED_MUTTER_SCREEN_CAST_API_VERSION 3
-
 enum
 {
   STREAM_SIGNAL_READY,
@@ -643,12 +641,6 @@ gnome_screen_cast_name_appeared (GDBusConnection *connection,
 
   gnome_screen_cast->api_version =
     org_gnome_mutter_screen_cast_get_version (gnome_screen_cast->proxy);
-  if (gnome_screen_cast->api_version > SUPPORTED_MUTTER_SCREEN_CAST_API_VERSION)
-    {
-      g_warning ("org.gnome.Mutter.ScreenCast API version not compatible");
-      g_clear_object (&gnome_screen_cast->proxy);
-      return;
-    }
 
   g_signal_emit (gnome_screen_cast, signals[ENABLED], 0);
 }
diff --git a/src/remotedesktop.c b/src/remotedesktop.c
index c2aefd5..e3cf06c 100644
--- a/src/remotedesktop.c
+++ b/src/remotedesktop.c
@@ -34,8 +34,6 @@
 #include "session.h"
 #include "utils.h"
 
-#define SUPPORTED_MUTTER_REMOTE_DESKTOP_API_VERSION 1
-
 typedef enum _GnomeRemoteDesktopDeviceType
 {
   GNOME_REMOTE_DESKTOP_DEVICE_TYPE_KEYBOARD = 1 << 0,
@@ -878,7 +876,6 @@ remote_desktop_name_appeared (GDBusConnection *connection,
                               gpointer user_data)
 {
   g_autoptr(GError) error = NULL;
-  int api_version;
   unsigned int supported_device_types;
 
   remote_desktop =
@@ -895,14 +892,6 @@ remote_desktop_name_appeared (GDBusConnection *connection,
       return;
     }
 
-  api_version = org_gnome_mutter_remote_desktop_get_version (remote_desktop);
-  if (api_version != SUPPORTED_MUTTER_REMOTE_DESKTOP_API_VERSION)
-    {
-      g_warning ("org.gnome.Mutter.RemoteDesktop API version not compatible");
-      g_clear_object (&remote_desktop);
-      return;
-    }
-
   impl = G_DBUS_INTERFACE_SKELETON (xdp_impl_remote_desktop_skeleton_new ());
 
   g_signal_connect (impl, "handle-create-session",
diff --git a/src/screencast.c b/src/screencast.c
index c4c75a0..e932e85 100644
--- a/src/screencast.c
+++ b/src/screencast.c
@@ -35,8 +35,6 @@
 #include "session.h"
 #include "utils.h"
 
-#define SUPPORTED_MUTTER_SCREEN_CAST_API_VERSION 3
-
 typedef struct _ScreenCastDialogHandle ScreenCastDialogHandle;
 
 typedef struct _ScreenCastSession
@@ -415,7 +413,6 @@ start_session (ScreenCastSession *screen_cast_session,
                GError **error)
 {
   GnomeScreenCastSession *gnome_screen_cast_session;
-  int gnome_api_version;
   g_autoptr(GVariant) source_selections = NULL;
 
   gnome_screen_cast_session =
@@ -423,18 +420,6 @@ start_session (ScreenCastSession *screen_cast_session,
   if (!gnome_screen_cast_session)
     return FALSE;
 
-  gnome_api_version = gnome_screen_cast_get_api_version (gnome_screen_cast);
-  if (gnome_api_version < SUPPORTED_MUTTER_SCREEN_CAST_API_VERSION)
-    {
-      g_set_error (error, XDG_DESKTOP_PORTAL_ERROR,
-                   XDG_DESKTOP_PORTAL_ERROR_FAILED,
-                   "org.gnome.Mutter.ScreenCast API version %d lower "
-                   "than minimum supported version %d",
-                   gnome_api_version, SUPPORTED_MUTTER_SCREEN_CAST_API_VERSION);
-      g_clear_object (&gnome_screen_cast);
-      return FALSE;
-    }
-
   screen_cast_session->gnome_screen_cast_session = gnome_screen_cast_session;
 
   screen_cast_session->session_ready_handler_id =
