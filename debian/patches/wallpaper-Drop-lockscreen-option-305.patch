From: Felipe Borges <felipeborges@gnome.org>
Date: Fri, 29 May 2020 00:42:57 +0200
Subject: wallpaper: Drop "lockscreen" option (#305)

In GNOME 3.36 the lockscreen is now a blurried version of the
wallpaper. Although the gsetting for setting the lockscreen
background image will persist available, we should be consistent
with GNOME's UX decisions.

The frontend code should keep the "set-on" option, since other
desktop environments such as KDE might still have a separate
lockscreen image.

The "set-on" option will be simply ignored for the GTK backend.

See https://blogs.gnome.org/shell-dev/2020/02/18/login-and-unlock-in-gnome-shell-3-36/

Origin: upstream, 1.7.2, commit:414adcac25458db38fb887d082cc52ab06ebf670
---
 src/wallpaper.c         | 47 ++++++-----------------------------------------
 src/wallpaperdialog.c   | 45 +++------------------------------------------
 src/wallpaperdialog.h   |  9 +--------
 src/wallpaperdialog.ui  |  7 +------
 src/wallpaperpreview.c  | 11 ++++-------
 src/wallpaperpreview.h  |  3 +--
 src/wallpaperpreview.ui | 27 +--------------------------
 7 files changed, 17 insertions(+), 132 deletions(-)

diff --git a/src/wallpaper.c b/src/wallpaper.c
index b2e22b3..1fddc4e 100644
--- a/src/wallpaper.c
+++ b/src/wallpaper.c
@@ -26,7 +26,6 @@
 #include "utils.h"
 
 #define BACKGROUND_SCHEMA "org.gnome.desktop.background"
-#define LOCKSCREEN_SCHEMA "org.gnome.desktop.screensaver"
 
 typedef struct {
   XdpImplWallpaper *impl;
@@ -37,7 +36,6 @@ typedef struct {
 
   guint response;
   gchar *picture_uri;
-  SetWallpaperOn set_on;
 } WallpaperDialogHandle;
 
 static void
@@ -115,21 +113,10 @@ on_file_copy_cb (GObject *source_object,
                            NULL, NULL,
                            &error);
 
-  switch (handle->set_on)
-    {
-      case BACKGROUND:
-        if (set_gsettings (BACKGROUND_SCHEMA, handle->picture_uri))
-          handle->response = 0;
-        break;
-      case LOCKSCREEN:
-        if (set_gsettings (LOCKSCREEN_SCHEMA, handle->picture_uri))
-          handle->response = 0;
-        break;
-      default:
-        if (set_gsettings (BACKGROUND_SCHEMA, handle->picture_uri) &&
-            set_gsettings (LOCKSCREEN_SCHEMA, handle->picture_uri))
-          handle->response = 0;
-    }
+  if (set_gsettings (BACKGROUND_SCHEMA, handle->picture_uri))
+    handle->response = 0;
+  else
+    handle->response = 1;
 
 out:
   send_response (handle);
@@ -139,22 +126,9 @@ static void
 set_wallpaper (WallpaperDialogHandle *handle,
                const gchar *uri)
 {
-  g_autofree gchar *dest_filename = NULL;
   g_autoptr(GFile) source = NULL;
 
-  switch (handle->set_on)
-    {
-      case BACKGROUND:
-        dest_filename = g_strdup ("background");
-        break;
-      case LOCKSCREEN:
-        dest_filename = g_strdup ("lockscreen");
-        break;
-      default:
-        dest_filename = g_strdup ("both");
-    }
-
-  handle->picture_uri = g_build_filename (g_get_user_config_dir (), dest_filename, NULL);
+  handle->picture_uri = g_build_filename (g_get_user_config_dir (), "background", NULL);
 
   source = g_file_new_for_uri (uri);
   g_file_load_contents_async (source,
@@ -204,7 +178,6 @@ handle_set_wallpaper_uri (XdpImplWallpaper *object,
   WallpaperDialogHandle *handle;
   const char *sender;
   gboolean show_preview = FALSE;
-  const char *set_on = NULL;
   GdkDisplay *display;
   GdkScreen *screen;
   ExternalWindow *external_parent = NULL;
@@ -214,7 +187,6 @@ handle_set_wallpaper_uri (XdpImplWallpaper *object,
   sender = g_dbus_method_invocation_get_sender (invocation);
   request = request_new (sender, arg_app_id, arg_handle);
 
-  g_variant_lookup (arg_options, "set-on", "&s", &set_on);
   g_variant_lookup (arg_options, "show-preview", "b", &show_preview);
 
   handle = g_new0 (WallpaperDialogHandle, 1);
@@ -222,13 +194,6 @@ handle_set_wallpaper_uri (XdpImplWallpaper *object,
   handle->invocation = invocation;
   handle->request = g_object_ref (request);
 
-  if (!set_on || g_strcmp0 (set_on, "both") == 0)
-    handle->set_on = BOTH;
-  else if (g_strcmp0 (set_on, "background") == 0)
-    handle->set_on = BACKGROUND;
-  else if (g_strcmp0 (set_on, "lockscreen") == 0)
-    handle->set_on = LOCKSCREEN;
-
   if (!show_preview)
     {
       set_wallpaper (handle, g_strdup (arg_uri));
@@ -255,7 +220,7 @@ handle_set_wallpaper_uri (XdpImplWallpaper *object,
                               NULL);
   g_object_ref_sink (fake_parent);
 
-  dialog = (GtkWidget *)wallpaper_dialog_new (arg_uri, arg_app_id, handle->set_on);
+  dialog = (GtkWidget *)wallpaper_dialog_new (arg_uri, arg_app_id);
   gtk_window_set_transient_for (GTK_WINDOW (dialog), GTK_WINDOW (fake_parent));
   handle->dialog = g_object_ref (dialog);
 
diff --git a/src/wallpaperdialog.c b/src/wallpaperdialog.c
index 0ae1a4c..17bc6db 100644
--- a/src/wallpaperdialog.c
+++ b/src/wallpaperdialog.c
@@ -35,10 +35,8 @@ struct _WallpaperDialog {
 
   GtkWidget *stack;
   WallpaperPreview *desktop_preview;
-  WallpaperPreview *lockscreen_preview;
 
   gchar *picture_uri;
-  SetWallpaperOn set_on;
 };
 
 struct _WallpaperDialogClass {
@@ -108,32 +106,11 @@ wallpaper_dialog_class_init (WallpaperDialogClass *klass)
   gtk_widget_class_set_template_from_resource (widget_class, "/org/freedesktop/portal/desktop/gtk/wallpaperdialog.ui");
   gtk_widget_class_bind_template_child (widget_class, WallpaperDialog, stack);
   gtk_widget_class_bind_template_child (widget_class, WallpaperDialog, desktop_preview);
-  gtk_widget_class_bind_template_child (widget_class, WallpaperDialog, lockscreen_preview);
 
   gtk_widget_class_bind_template_callback (widget_class, wallpaper_dialog_cancel);
   gtk_widget_class_bind_template_callback (widget_class, wallpaper_dialog_apply);
 }
 
-static void
-set_wallpaper_on_background (WallpaperDialog *self)
-{
-  wallpaper_preview_set_image (self->desktop_preview,
-                               self->picture_uri, FALSE);
-  gtk_window_set_title (GTK_WINDOW (self), _("Set Background"));
-  gtk_stack_set_visible_child (GTK_STACK (self->stack),
-                               GTK_WIDGET (self->desktop_preview));
-}
-
-static void
-set_wallpaper_on_lockscreen (WallpaperDialog *self)
-{
-  wallpaper_preview_set_image (self->lockscreen_preview,
-                               self->picture_uri, TRUE);
-  gtk_window_set_title (GTK_WINDOW (self), _("Set Lock Screen"));
-  gtk_stack_set_visible_child (GTK_STACK (self->stack),
-                               GTK_WIDGET (self->lockscreen_preview));
-}
-
 static void
 on_image_loaded_cb (GObject *source_object,
                     GAsyncResult *result,
@@ -159,35 +136,19 @@ on_image_loaded_cb (GObject *source_object,
   g_file_replace_contents (tmp, contents, length, NULL, FALSE, G_FILE_CREATE_REPLACE_DESTINATION, NULL, NULL, &error);
 
   self->picture_uri = g_strdup (g_file_get_uri (tmp));
-
-  switch (self->set_on)
-    {
-      case BACKGROUND:
-        set_wallpaper_on_background (self);
-        break;
-      case LOCKSCREEN:
-        set_wallpaper_on_lockscreen (self);
-        break;
-      default:
-        set_wallpaper_on_background (self);
-        set_wallpaper_on_lockscreen (self);
-
-        gtk_window_set_title (GTK_WINDOW (self),
-                              _("Set Background & Lock Screen"));
-    }
+  wallpaper_preview_set_image (self->desktop_preview,
+                               self->picture_uri, FALSE);
 }
 
 WallpaperDialog *
 wallpaper_dialog_new (const gchar *picture_uri,
-                      const gchar *app_id,
-                      SetWallpaperOn set_on)
+                      const gchar *app_id)
 {
   WallpaperDialog *self;
   g_autoptr(GFile) image_file = g_file_new_for_uri (picture_uri);
 
   self = g_object_new (wallpaper_dialog_get_type (), NULL);
 
-  self->set_on = set_on;
   g_file_load_contents_async (image_file,
                               NULL,
                               on_image_loaded_cb,
diff --git a/src/wallpaperdialog.h b/src/wallpaperdialog.h
index 52ab022..e774a75 100644
--- a/src/wallpaperdialog.h
+++ b/src/wallpaperdialog.h
@@ -25,19 +25,12 @@
 #define WALLPAPER_TYPE_DIALOG (wallpaper_dialog_get_type ())
 #define WALLPAPER_DIALOG(object) (G_TYPE_CHECK_INSTANCE_CAST (object, WALLPAPER_TYPE_DIALOG, WallpaperDialog))
 
-typedef enum {
-  BACKGROUND,
-  LOCKSCREEN,
-  BOTH
-} SetWallpaperOn;
-
 typedef struct _WallpaperDialog WallpaperDialog;
 typedef struct _WallpaperDialogClass WallpaperDialogClass;
 
 GType             wallpaper_dialog_get_type (void) G_GNUC_CONST;
 
 WallpaperDialog * wallpaper_dialog_new (const char *picture_uri,
-                                        const char *app_id,
-                                        SetWallpaperOn set_on);
+                                        const char *app_id);
 
 const gchar     * wallpaper_dialog_get_uri (WallpaperDialog *dialog);
diff --git a/src/wallpaperdialog.ui b/src/wallpaperdialog.ui
index d91426b..65fc4cf 100644
--- a/src/wallpaperdialog.ui
+++ b/src/wallpaperdialog.ui
@@ -48,17 +48,12 @@
                 <property name="visible">True</property>
                </object>
              </child>
-             <child>
-               <object class="WallpaperPreview" id="lockscreen_preview">
-                 <property name="visible">True</property>
-                </object>
-            </child>
             <child>
               <object class="GtkBox">
                 <property name="visible">True</property>
                 <child>
                   <object class="GtkLabel">
-	            <property name="visible">True</property>
+                    <property name="visible">True</property>
                     <property name="label" translatable="yes">Failed to load image file</property>
                   </object>
                 </child>
diff --git a/src/wallpaperpreview.c b/src/wallpaperpreview.c
index 7bb68e6..5910c6a 100644
--- a/src/wallpaperpreview.c
+++ b/src/wallpaperpreview.c
@@ -37,8 +37,8 @@ struct _WallpaperPreview {
   GtkBox parent;
 
   GtkStack *stack;
+  GtkWidget *desktop_preview;
   GtkWidget *animated_background_icon;
-  GtkLabel *lockscreen_clock_label;
   GtkLabel *desktop_clock_label;
   GtkWidget *drawing_area;
 
@@ -99,7 +99,6 @@ update_clock_label (WallpaperPreview *self,
     label = g_date_time_format (now, "%I:%M %p");
 
   gtk_label_set_label (self->desktop_clock_label, label);
-  gtk_label_set_label (self->lockscreen_clock_label, label);
 
   g_clear_pointer (&self->previous_time, g_date_time_unref);
   self->previous_time = g_steal_pointer (&now);
@@ -200,10 +199,10 @@ wallpaper_preview_class_init (WallpaperPreviewClass *klass)
   gtk_widget_class_set_template_from_resource (widget_class, "/org/freedesktop/portal/desktop/gtk/wallpaperpreview.ui");
 
   gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, stack);
+  gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, desktop_preview);
   gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, animated_background_icon);
   gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, drawing_area);
   gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, desktop_clock_label);
-  gtk_widget_class_bind_template_child (widget_class, WallpaperPreview, lockscreen_clock_label);
   gtk_widget_class_bind_template_callback (widget_class, on_preview_draw_cb);
 }
 
@@ -215,8 +214,7 @@ wallpaper_preview_new ()
 
 void
 wallpaper_preview_set_image (WallpaperPreview *self,
-                             const gchar *image_uri,
-                             gboolean is_lockscreen)
+                             const gchar *image_uri)
 {
   g_autofree char *path = NULL;
   g_autoptr(GFile) image_file = NULL;
@@ -227,8 +225,7 @@ wallpaper_preview_set_image (WallpaperPreview *self,
 
   gtk_widget_set_visible (self->animated_background_icon,
                           gnome_bg_changes_with_time (self->bg));
-
-  gtk_stack_set_visible_child_name (GTK_STACK (self->stack), is_lockscreen ? "lockscreen" : "desktop");
+  gtk_stack_set_visible_child (GTK_STACK (self->stack), self->desktop_preview);
 
   gtk_widget_queue_draw (self->drawing_area);
 }
diff --git a/src/wallpaperpreview.h b/src/wallpaperpreview.h
index 466ec8b..df2dc6f 100644
--- a/src/wallpaperpreview.h
+++ b/src/wallpaperpreview.h
@@ -31,5 +31,4 @@ typedef struct _WallpaperPreviewClass WallpaperPreviewClass;
 GType              wallpaper_preview_get_type  (void) G_GNUC_CONST;
 
 void               wallpaper_preview_set_image (WallpaperPreview *self,
-                                                const gchar *image_uri,
-                                                gboolean is_lockscreen);
+                                                const gchar *image_uri);
diff --git a/src/wallpaperpreview.ui b/src/wallpaperpreview.ui
index 1b55ffc..0f99e90 100644
--- a/src/wallpaperpreview.ui
+++ b/src/wallpaperpreview.ui
@@ -38,7 +38,7 @@
             </child>
 
             <child>
-              <object class="GtkFrame">
+              <object class="GtkFrame" id="desktop_preview">
                 <property name="visible">True</property>
                 <property name="can-focus">False</property>
                 <property name="shadow-type">none</property>
@@ -101,31 +101,6 @@
                   </object>
                 </child>
               </object>
-              <packing>
-                <property name="name">desktop</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkFrame">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="shadow-type">none</property>
-                <child>
-                  <object class="GtkLabel" id="lockscreen_clock_label">
-                    <property name="visible">True</property>
-                    <property name="can-focus">False</property>
-                    <property name="expand">True</property>
-                    <property name="xalign">0.5</property>
-                    <property name="yalign">0.5</property>
-                    <style>
-                      <class name="lockscreen-preview"/>
-                    </style>
-                  </object>
-                </child>
-              </object>
-              <packing>
-                <property name="name">lockscreen</property>
-              </packing>
             </child>
           </object>
         </child>
